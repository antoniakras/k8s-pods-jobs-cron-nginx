apiVersion: v1
kind: Pod
metadata:
  name: taskpod
spec:
  containers:
  - name: taskcontainer
    image: nginx:1.23.3-alpine
    ports:
    - containerPort: 80
      hostPort: 8080
  volumes:
  - name: script-volume
    configMap:
      name: website-script

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: website-script
data:
  website-script.sh: |
    #!/bin/sh
    apt-get update
    apt-get install -y git 
    apt-get install -y make
    apt-get install -y curl
    curl -L https://github.com/gohugoio/hugo/releases/download/v0.123.4/hugo_extended_0.123.4_linux-arm64.deb -o hugo.deb 
    dpkg -i hugo.deb
    git clone https://github.com/chazapis/hy548.git
    cd hy548
    git submodule init 
    git submodule update
    make 

---
apiVersion: batch/v1
kind: Job
metadata:
  name: website-build
  namespace: default  
spec:
  template:
    spec:
      containers:
      - name: website-build
        image: ubuntu:20.04
        command: ["/bin/sh", "-c", "bash /config/website-script.sh"]
        volumeMounts:
        - name: script-volume
          mountPath: "/config"
      restartPolicy: OnFailure
      volumes:
      - name: script-volume
        configMap:
          name: website-script

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: refresh-script
data:
  refresh.sh: |
    #!/bin/sh
    apt-get update
    apt-get install -y git make curl
    cd git/hy548
    status=$(git status --porcelain)
    if [ -n "$status" ]; then
     git pull
     curl -L https://github.com/gohugoio/hugo/releases/download/v0.123.4/hugo_extended_0.123.4_linux-arm64.deb -o hugo.deb 
     dpkg -i hugo.deb
     make 
    else
      echo "Everything is up to date."
    fi

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: website-refresh
spec:
  schedule: "15 2 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
          - name: refresh
            image: ubuntu:20.04
            command: ["/bin/sh", "-c", " bash /config/refresh.sh"]
            volumeMounts:
            - name: config-volume
              mountPath: "/config"
            - name: website-volume
              mountPath: "/website"
          volumes:
          - name: config-volume
            configMap:
              name: refresh-script
          - name: website-volume  # Define the missing volume here
            emptyDir: {}
